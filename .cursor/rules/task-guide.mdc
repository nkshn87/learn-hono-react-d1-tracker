---
description: 
globs: 
alwaysApply: true
---
# タスク進め方ガイド

## 1. タスク管理
- タスクは細かく分割し、`tasks/TASKS.md`で進捗を管理します。
- 各タスクの完了後、必ず`tasks/TASKS.md`を更新し、進捗を反映させます。
- **一つタスクが完了したら、原則として自動的に次のタスクに進めてください。**
- **詳細なサブタスクや進行中タスクのToDoは、`tasks/sub-tasks/`ディレクトリ配下に個別のmdファイル（例：`tasks/sub-tasks/TASK-001-hono-rpc.md`）として管理することを推奨します。**

## 2. コミット方針
- キリの良い単位で必ずコミット＆プッシュします。
- コミットメッセージは具体的に記述し、変更内容を明確にします。

### コミット前のチェックリスト
1. **必ず`git status`で変更内容を確認すること**
2. `git diff`で変更内容を確認
3. 関連する変更をまとめて1つのコミットに
4. **コミット対象ファイルのパス指定ミスや未コミットがないか必ず確認する**
5. コミットメッセージは`type: 変更内容`の形式で記述
   - `feat:` 新機能
   - `fix:` バグ修正
   - `docs:` ドキュメント
   - `chore:` その他の変更
6. コミット後は`git push`でリモートに反映
7. **実装・編集したファイルをコミットしてから、進捗管理（TASKS.md等）をコミットすること**

## 3. 技術スタック
- **フロントエンド**: Vite + React + Tailwind v4 + shadcn/ui + Biome
- **バックエンド**: Hono + TypeScript
- **データベース**: Drizzle + Cloudflare D1
- **その他**: TanStack Query, Hono RPC

## 4. 開発環境
- モノレポ構成（pnpm workspaces）で開発します。
- 依存関係はルートの`package.json`に必要なものを追加します。
- `pnpm`のバージョンはCloudflare Pagesのビルド環境に合わせて固定します。
## 5. デプロイ
- Cloudflare Pagesにデプロイします。
- ビルドコマンドは`pnpm build`（ルートのscriptsで`pnpm --filter web... build`）に統一します。

## 6. APIサーバー
- Hono v4 + TypeScriptでAPIを実装します。
- `/health`エンドポイントで動作確認を行います。

## 7. その他
- 各パッケージで依存を完結させることは現状難しいため、ルートに必要な依存を追加します。
- トラブルシュートは都度対応し、`tasks/TASKS.md`に記録します。 
